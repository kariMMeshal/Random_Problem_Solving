#include <iostream>
#include <bits/stdc++.h>
#define fast ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;
typedef long long ll;

int main() {
    fast;

    int n, k;
    cin >> n >> k;
    int lec[100001];
    int awake[100001];
    ll alreadyAwake = 0;
    for (int i = 0; i < n; i++) cin >> lec[i];
    for (int i = 0; i < n; i++) {
        cin >> awake[i];
        if (awake[i] == 1) alreadyAwake += lec[i];
    }
    ll extra = 0;
    // first k-window
    for (int i = 0; i < k; i++) {
        if (!awake[i]) extra += lec[i];
    }

    ll maxExtra = extra;

    //sliding the window taking the next element and removing the last taken one and maximizing extra
    for (int i = k; i < n; i++) {
        if (!awake[i]) extra += lec[i];
        if (!awake[i - k]) extra -= lec[i - k];
        maxExtra = max(maxExtra, extra);
    }
    cout << alreadyAwake + maxExtra << endl;

    return 0;
}
