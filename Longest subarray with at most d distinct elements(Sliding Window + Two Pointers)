#include <iostream>
#include <bits/stdc++.h>
#define fast ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;
typedef long long ll;


int main() {
    fast;
    int n, d;
    cin >> n >> d;
    int arr[500001];
    for (int i = 0; i < n; i++) cin >> arr[i];
    multiset<int> st;
    int l = 0, r = 0;
    int ansL = 0, ansR = 0;
    int uniq = 0;

    /*
    EXAMPLE TO TRACE :
    n = 9, d = 3
    arr = 6 5 1 2 3 2 1 4 5
     */

    while (r < n) {
        if (st.find(arr[r]) == st.end()) {
            while (uniq >= d) {
                st.erase(st.find(arr[l]));
                if (st.find(arr[l]) == st.end()) {
                    uniq--;
                }
                l++;
            }
            uniq++;
        }
        st.insert(arr[r]);
        // 2       6
        if (ansR - ansL < r - l) {
            ansL = l;
            ansR = r;
        }
        r++;
    }
    cout<<ansL+1<<" "<<ansR+1;
    return 0;
}
